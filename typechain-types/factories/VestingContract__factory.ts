/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VestingContract,
  VestingContractInterface,
} from "../VestingContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "beneficiaries",
    outputs: [
      {
        internalType: "uint256",
        name: "vestStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vested",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "vest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingPeriodDays",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052601e60015560006002553480156200001b57600080fd5b506040516200142a3803806200142a8339818101604052810190620000419190620001df565b6200006162000055620000a960201b60201c565b620000b160201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000211565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a7826200017a565b9050919050565b620001b9816200019a565b8114620001c557600080fd5b50565b600081519050620001d981620001ae565b92915050565b600060208284031215620001f857620001f762000175565b5b60006200020884828501620001c8565b91505092915050565b61120980620002216000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610101578063a9a084961461011f578063f2fde38b1461013d578063fc0c546a1461015957610088565b8063015677391461008d5780632797c6c8146100bf578063379607f5146100db578063715018a6146100f7575b600080fd5b6100a760048036038101906100a29190610aa6565b610177565b6040516100b693929190610aec565b60405180910390f35b6100d960048036038101906100d49190610b4f565b6101a1565b005b6100f560048036038101906100f09190610b8f565b610489565b005b6100ff6106dd565b005b610109610765565b6040516101169190610bcb565b60405180910390f35b61012761078e565b6040516101349190610be6565b60405180910390f35b61015760048036038101906101529190610aa6565b610794565b005b61016161088c565b60405161016e9190610c60565b60405180910390f35b60046020528060005260406000206000915090508060000154908060010154908060020154905083565b6101a96108b2565b73ffffffffffffffffffffffffffffffffffffffff166101c7610765565b73ffffffffffffffffffffffffffffffffffffffff161461021d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021490610cd8565b60405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154146102a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029990610d44565b60405180910390fd5b80600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610300929190610d64565b602060405180830381865afa15801561031d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103419190610da2565b1015610382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037990610e1b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103e193929190610e3b565b6020604051808303816000875af1158015610400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104249190610eaa565b506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905081816002018190555060008160010181905550428160000181905550505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000620151808260000154426104e29190610f06565b6104ec9190610f69565b905061052d6040518060400160405280601281526020017f446179732046726f6d2053746172742025730000000000000000000000000000815250826108ba565b60006305f5e10061271084600101546105469190610f9a565b83612710600154612710886002015461055f9190610f9a565b6105699190610f69565b6105739190610f9a565b61057d9190610f9a565b6105879190610f06565b6105919190610f69565b90506001548214156105b457826001015483600201546105b19190610f06565b90505b6105f36040518060400160405280601681526020017f417661696c61626c6520746f20636c61696d3a20257300000000000000000000815250826108ba565b80841115610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d90611040565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610693929190611060565b6020604051808303816000875af11580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d69190610eaa565b5050505050565b6106e56108b2565b73ffffffffffffffffffffffffffffffffffffffff16610703610765565b73ffffffffffffffffffffffffffffffffffffffff1614610759576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075090610cd8565b60405180910390fd5b6107636000610956565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b61079c6108b2565b73ffffffffffffffffffffffffffffffffffffffff166107ba610765565b73ffffffffffffffffffffffffffffffffffffffff1614610810576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080790610cd8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610880576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610877906110fb565b60405180910390fd5b61088981610956565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b61095282826040516024016108d09291906111a3565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a1a565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7382610a48565b9050919050565b610a8381610a68565b8114610a8e57600080fd5b50565b600081359050610aa081610a7a565b92915050565b600060208284031215610abc57610abb610a43565b5b6000610aca84828501610a91565b91505092915050565b6000819050919050565b610ae681610ad3565b82525050565b6000606082019050610b016000830186610add565b610b0e6020830185610add565b610b1b6040830184610add565b949350505050565b610b2c81610ad3565b8114610b3757600080fd5b50565b600081359050610b4981610b23565b92915050565b60008060408385031215610b6657610b65610a43565b5b6000610b7485828601610a91565b9250506020610b8585828601610b3a565b9150509250929050565b600060208284031215610ba557610ba4610a43565b5b6000610bb384828501610b3a565b91505092915050565b610bc581610a68565b82525050565b6000602082019050610be06000830184610bbc565b92915050565b6000602082019050610bfb6000830184610add565b92915050565b6000819050919050565b6000610c26610c21610c1c84610a48565b610c01565b610a48565b9050919050565b6000610c3882610c0b565b9050919050565b6000610c4a82610c2d565b9050919050565b610c5a81610c3f565b82525050565b6000602082019050610c756000830184610c51565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610cc2602083610c7b565b9150610ccd82610c8c565b602082019050919050565b60006020820190508181036000830152610cf181610cb5565b9050919050565b7f42656e656669636961727920616c726561647920726567697374657265640000600082015250565b6000610d2e601e83610c7b565b9150610d3982610cf8565b602082019050919050565b60006020820190508181036000830152610d5d81610d21565b9050919050565b6000604082019050610d796000830185610bbc565b610d866020830184610bbc565b9392505050565b600081519050610d9c81610b23565b92915050565b600060208284031215610db857610db7610a43565b5b6000610dc684828501610d8d565b91505092915050565b7f6e6f7420656e6f75676820636f696e7320616c6c6f7765640000000000000000600082015250565b6000610e05601883610c7b565b9150610e1082610dcf565b602082019050919050565b60006020820190508181036000830152610e3481610df8565b9050919050565b6000606082019050610e506000830186610bbc565b610e5d6020830185610bbc565b610e6a6040830184610add565b949350505050565b60008115159050919050565b610e8781610e72565b8114610e9257600080fd5b50565b600081519050610ea481610e7e565b92915050565b600060208284031215610ec057610ebf610a43565b5b6000610ece84828501610e95565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f1182610ad3565b9150610f1c83610ad3565b925082821015610f2f57610f2e610ed7565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7482610ad3565b9150610f7f83610ad3565b925082610f8f57610f8e610f3a565b5b828204905092915050565b6000610fa582610ad3565b9150610fb083610ad3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fe957610fe8610ed7565b5b828202905092915050565b7f4e6f7420656e6f75676820636f696e7320746f20636c61696d00000000000000600082015250565b600061102a601983610c7b565b915061103582610ff4565b602082019050919050565b600060208201905081810360008301526110598161101d565b9050919050565b60006040820190506110756000830185610bbc565b6110826020830184610add565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006110e5602683610c7b565b91506110f082611089565b604082019050919050565b60006020820190508181036000830152611114816110d8565b9050919050565b600081519050919050565b60005b83811015611144578082015181840152602081019050611129565b83811115611153576000848401525b50505050565b6000601f19601f8301169050919050565b60006111758261111b565b61117f8185610c7b565b935061118f818560208601611126565b61119881611159565b840191505092915050565b600060408201905081810360008301526111bd818561116a565b90506111cc6020830184610add565b939250505056fea2646970667358221220dcc0bd9b808c146a9cdb1e3d311b83075c5d263bb64cfbb7574d665e1dc9c24c64736f6c634300080b0033";

type VestingContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VestingContract__factory extends ContractFactory {
  constructor(...args: VestingContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VestingContract> {
    return super.deploy(_token, overrides || {}) as Promise<VestingContract>;
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  attach(address: string): VestingContract {
    return super.attach(address) as VestingContract;
  }
  connect(signer: Signer): VestingContract__factory {
    return super.connect(signer) as VestingContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingContractInterface {
    return new utils.Interface(_abi) as VestingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestingContract {
    return new Contract(address, _abi, signerOrProvider) as VestingContract;
  }
}
