/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VestingContract,
  VestingContractInterface,
} from "../VestingContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "beneficiaries",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vestEnd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vested",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "vest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b506104e0806100246000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301567739146100465780632797c6c8146100785780638af5de7214610094575b600080fd5b610060600480360381019061005b9190610295565b6100b2565b60405161006f939291906102ea565b60405180910390f35b610092600480360381019061008d919061034d565b6100fc565b005b61009c61022c565b6040516100a9919061038d565b60405180910390f35b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414610181576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017890610405565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081816002018190555062278d004261021f9190610454565b8160010181905550505050565b60005481565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061026282610237565b9050919050565b61027281610257565b811461027d57600080fd5b50565b60008135905061028f81610269565b92915050565b6000602082840312156102ab576102aa610232565b5b60006102b984828501610280565b91505092915050565b6102cb81610257565b82525050565b6000819050919050565b6102e4816102d1565b82525050565b60006060820190506102ff60008301866102c2565b61030c60208301856102db565b61031960408301846102db565b949350505050565b61032a816102d1565b811461033557600080fd5b50565b60008135905061034781610321565b92915050565b6000806040838503121561036457610363610232565b5b600061037285828601610280565b925050602061038385828601610338565b9150509250929050565b60006020820190506103a260008301846102db565b92915050565b600082825260208201905092915050565b7f42656e656669636961727920616c726561647920726567697374657265640000600082015250565b60006103ef601e836103a8565b91506103fa826103b9565b602082019050919050565b6000602082019050818103600083015261041e816103e2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061045f826102d1565b915061046a836102d1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561049f5761049e610425565b5b82820190509291505056fea26469706673582212201ab872168fe2d3c1ebe2b74fc1670daea41050a5e22e1363d4d0f329f5a768fc64736f6c634300080b0033";

type VestingContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VestingContract__factory extends ContractFactory {
  constructor(...args: VestingContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VestingContract> {
    return super.deploy(overrides || {}) as Promise<VestingContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VestingContract {
    return super.attach(address) as VestingContract;
  }
  connect(signer: Signer): VestingContract__factory {
    return super.connect(signer) as VestingContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingContractInterface {
    return new utils.Interface(_abi) as VestingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestingContract {
    return new Contract(address, _abi, signerOrProvider) as VestingContract;
  }
}
